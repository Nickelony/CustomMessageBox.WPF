<ResourceDictionary
	x:Class="CustomMessageBox.WPF.Demo.DarkStyles"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib">
	<!--  Brushes  -->
	<SolidColorBrush x:Key="Brush_Text" Color="#DCDCDC" />
	<SolidColorBrush x:Key="Brush_Background" Color="#3C3F41" />
	<SolidColorBrush x:Key="Brush_Background_Alternative" Color="#393C3E" />
	<SolidColorBrush x:Key="Brush_Background_ClickableControl" Color="#45494A" />
	<SolidColorBrush x:Key="Brush_Background_Defaulted" Color="#343942" />
	<SolidColorBrush x:Key="Brush_Background_Disabled" Color="#525252" />
	<SolidColorBrush x:Key="Brush_Background_High" Color="#5F6566" />
	<SolidColorBrush x:Key="Brush_Border" Color="#5C5C5C" />
	<SolidColorBrush x:Key="Brush_FocusHighlight" Color="#6897BB" />
	<SolidColorBrush x:Key="Brush_HoverHighlight" Color="White" />
	<SolidColorBrush x:Key="Brush_PressHighlight" Color="Black" />
	<SolidColorBrush x:Key="Brush_WindowBorder" Color="#424D5F" />

	<!--  Opacities  -->
	<sys:Double x:Key="Opacity_HoveredHighlight">0.15</sys:Double>
	<sys:Double x:Key="Opacity_PressedHighlight">0.5</sys:Double>
	<sys:Double x:Key="Opacity_DisabledContent">0.5</sys:Double>

	<Style TargetType="{x:Type Button}">
		<!--  Layout  -->
		<Setter Property="Height" Value="24" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="{DynamicResource Brush_Background_ClickableControl}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Brush_Text}" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="6,3,6,3" />

		<!--  Template  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" />

						<Rectangle
							x:Name="hoverRect"
							Margin="{TemplateBinding BorderThickness}"
							Fill="{DynamicResource Brush_HoverHighlight}"
							Opacity="{DynamicResource Opacity_HoveredHighlight}"
							Visibility="Hidden" />
						<Rectangle
							x:Name="pressRect"
							Margin="{TemplateBinding BorderThickness}"
							Fill="{DynamicResource Brush_PressHighlight}"
							Opacity="{DynamicResource Opacity_PressedHighlight}"
							Visibility="Hidden" />

						<Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
							<ContentPresenter
								x:Name="contentPresenter"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								RecognizesAccessKey="True" />
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource Brush_Background_Disabled}" />
							<Setter TargetName="contentPresenter" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
						</Trigger>

						<Trigger Property="IsDefault" Value="True">
							<Setter Property="Background" Value="{DynamicResource Brush_Background_Defaulted}" />
						</Trigger>

						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource Brush_FocusHighlight}" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsPressed" Value="False" />
							</MultiTrigger.Conditions>

							<Setter TargetName="hoverRect" Property="Visibility" Value="Visible" />
						</MultiTrigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="pressRect" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CMessageBoxWindow" TargetType="{x:Type Window}">
		<!--  Window properties  -->
		<Setter Property="ResizeMode" Value="CanResizeWithGrip" />
		<Setter Property="WindowStyle" Value="SingleBorderWindow" />
		<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					CaptionHeight="25"
					GlassFrameThickness="8"
					ResizeBorderThickness="4"
					UseAeroCaptionButtons="False" />
			</Setter.Value>
		</Setter>

		<!--  Layout  -->
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="{DynamicResource Brush_Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_WindowBorder}" />
		<Setter Property="Foreground" Value="{DynamicResource Brush_Text}" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="1" />

		<!--  Template  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<AdornerDecorator Margin="0,30,0,0">
									<ContentPresenter />
								</AdornerDecorator>
								<Grid
									x:Name="titleBar"
									Height="30"
									VerticalAlignment="Top"
									Background="{TemplateBinding BorderBrush}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>

										<Image
											Height="64"
											Margin="0,-12,0,0"
											Opacity="{DynamicResource Opacity_DisabledContent}"
											Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
										<TextBlock
											Grid.Column="1"
											Margin="8,0,0,0"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Center"
											FontSize="12"
											Foreground="{TemplateBinding Foreground}"
											Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}" />
									</Grid>
									<StackPanel
										Grid.Column="0"
										HorizontalAlignment="Right"
										Orientation="Horizontal">
										<Button
											x:Name="btnClose"
											Width="40"
											Height="Auto"
											Background="Transparent"
											BorderBrush="Transparent"
											Click="CloseWindow_Event"
											Template="{DynamicResource CloseWindowButton}"
											WindowChrome.IsHitTestVisibleInChrome="True">
											<Grid Margin="0,1,0,0">
												<Line
													Stroke="{DynamicResource Brush_Text}"
													StrokeThickness="1"
													X1="0"
													X2="12"
													Y1="0"
													Y2="12" />
												<Line
													Stroke="{DynamicResource Brush_Text}"
													StrokeThickness="1"
													X1="0"
													X2="12"
													Y1="12"
													Y2="0" />
											</Grid>
										</Button>
									</StackPanel>
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="CloseWindowButton" TargetType="{x:Type Button}">
		<Border
			x:Name="border"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
			UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
			<ContentPresenter
				x:Name="contentPresenter"
				Margin="{TemplateBinding Padding}"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RecognizesAccessKey="True" />
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="border" Property="Background" Value="{DynamicResource Brush_Background}" />
				<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush_Border}" />
				<Setter TargetName="contentPresenter" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
			</Trigger>

			<Trigger Property="IsDefaulted" Value="True">
				<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush_Background_High}" />
			</Trigger>

			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter TargetName="border" Property="Background" Value="#F01428" />
				<Setter TargetName="border" Property="BorderBrush" Value="#F01428" />
			</Trigger>

			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="border" Property="Background" Value="#F01428" />
				<Setter TargetName="border" Property="BorderBrush" Value="#F01428" />
			</Trigger>

			<Trigger Property="IsPressed" Value="True">
				<Setter TargetName="border" Property="Background" Value="#940A14" />
				<Setter TargetName="border" Property="BorderBrush" Value="#940A14" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>
